version: "3.9"

services:
  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: ${POSTGRES_CONTAINER}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${POSTGRES_TZ}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_VOLUME}:/docker-entrypoint-initdb.d/BaseDatos.sql
    networks:
      - bank_net

  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    container_name: ${ZOOKEEPER_CONTAINER}
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME}
    ports:
      - "${ZOOKEEPER_CLIENT_PORT}:${ZOOKEEPER_CLIENT_PORT}"
    networks:
      - bank_net

  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka_bank
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper_bank:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_bank:9092,PLAINTEXT_INTERNAL://kafka_bank:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - bank_net

  gestion-clientes:
    build:
      context: ./gestion-clientes
      dockerfile: Dockerfile
    container_name: gestion-clientes
    image: banco/gestion-clientes:latest
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - bank_net

  operaciones-bancarias:
    build:
      context: ./operaciones-bancarias
      dockerfile: Dockerfile
    container_name: operaciones-bancarias
    image: banco/operaciones-bancarias:latest
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka
      - gestion-clientes
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka_bank:29092   # ðŸ‘ˆ entre comillas opcional pero recomendado
    networks:
      - bank_net

networks:
  bank_net:
    name: bank_net   
    driver: bridge
